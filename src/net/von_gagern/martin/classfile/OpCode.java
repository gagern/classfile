package net.von_gagern.martin.classfile;

public enum OpCode implements ClassWriter.Writable {
    NOP(),
    ACONST_NULL(),
    ICONST_M1(),
    ICONST_0(),
    ICONST_1(),
    ICONST_2(),
    ICONST_3(),
    ICONST_4(),
    ICONST_5(),
    LCONST_0(),
    LCONST_1(),
    FCONST_0(),
    FCONST_1(),
    FCONST_2(),
    DCONST_0(),
    DCONST_1(),
    BIPUSH(OpArgs.I8),
    SIPUSH(OpArgs.I16),
    LDC(OpArgs.CP1),
    LDC_W(OpArgs.CP2),
    LDC2_W(OpArgs.CP2),
    ILOAD(OpArgs.LV1),
    LLOAD(OpArgs.LV1),
    FLOAD(OpArgs.LV1),
    DLOAD(OpArgs.LV1),
    ALOAD(OpArgs.LV1),
    ILOAD_0(),
    ILOAD_1(),
    ILOAD_2(),
    ILOAD_3(),
    LLOAD_0(),
    LLOAD_1(),
    LLOAD_2(),
    LLOAD_3(),
    FLOAD_0(),
    FLOAD_1(),
    FLOAD_2(),
    FLOAD_3(),
    DLOAD_0(),
    DLOAD_1(),
    DLOAD_2(),
    DLOAD_3(),
    ALOAD_0(),
    ALOAD_1(),
    ALOAD_2(),
    ALOAD_3(),
    IALOAD(),
    LALOAD(),
    FALOAD(),
    DALOAD(),
    AALOAD(),
    BALOAD(),
    CALOAD(),
    SALOAD(),
    ISTORE(OpArgs.LV1),
    LSTORE(OpArgs.LV1),
    FSTORE(OpArgs.LV1),
    DSTORE(OpArgs.LV1),
    ASTORE(OpArgs.LV1),
    ISTORE_0(),
    ISTORE_1(),
    ISTORE_2(),
    ISTORE_3(),
    LSTORE_0(),
    LSTORE_1(),
    LSTORE_2(),
    LSTORE_3(),
    FSTORE_0(),
    FSTORE_1(),
    FSTORE_2(),
    FSTORE_3(),
    DSTORE_0(),
    DSTORE_1(),
    DSTORE_2(),
    DSTORE_3(),
    ASTORE_0(),
    ASTORE_1(),
    ASTORE_2(),
    ASTORE_3(),
    IASTORE(),
    LASTORE(),
    FASTORE(),
    DASTORE(),
    AASTORE(),
    BASTORE(),
    CASTORE(),
    SASTORE(),
    POP(),
    POP2(),
    DUP(),
    DUP_X1(),
    DUP_X2(),
    DUP2(),
    DUP2_X1(),
    DUP2_X2(),
    SWAP(),
    IADD(),
    LADD(),
    FADD(),
    DADD(),
    ISUB(),
    LSUB(),
    FSUB(),
    DSUB(),
    IMUL(),
    LMUL(),
    FMUL(),
    DMUL(),
    IDIV(),
    LDIV(),
    FDIV(),
    DDIV(),
    IREM(),
    LREM(),
    FREM(),
    DREM(),
    INEG(),
    LNEG(),
    FNEG(),
    DNEG(),
    ISHL(),
    LSHL(),
    ISHR(),
    LSHR(),
    IUSHR(),
    LUSHR(),
    IAND(),
    LAND(),
    IOR(),
    LOR(),
    IXOR(),
    LXOR(),
    IINC(OpArgs.IINC),
    I2L(),
    I2F(),
    I2D(),
    L2I(),
    L2F(),
    L2D(),
    F2I(),
    F2L(),
    F2D(),
    D2I(),
    D2L(),
    D2F(),
    I2B(),
    I2C(),
    I2S(),
    LCMP(),
    FCMPL(),
    FCMPG(),
    DCMPL(),
    DCMPG(),
    IFEQ(OpArgs.OFF2),
    IFNE(OpArgs.OFF2),
    IFLT(OpArgs.OFF2),
    IFGE(OpArgs.OFF2),
    IFGT(OpArgs.OFF2),
    IFLE(OpArgs.OFF2),
    IF_ICMPEQ(OpArgs.OFF2),
    IF_ICMPNE(OpArgs.OFF2),
    IF_ICMPLT(OpArgs.OFF2),
    IF_ICMPGE(OpArgs.OFF2),
    IF_ICMPGT(OpArgs.OFF2),
    IF_ICMPLE(OpArgs.OFF2),
    IF_ACMPEQ(OpArgs.OFF2),
    IF_ACMPNE(OpArgs.OFF2),
    GOTO(OpArgs.OFF2),
    JSR(OpArgs.OFF2),
    RET(OpArgs.LV1),
    TABLESWITCH(OpArgs.TABLESWITCH),
    LOOKUPSWITCH(OpArgs.LOOKUPSWITCH),
    IRETURN(),
    LRETURN(),
    FRETURN(),
    DRETURN(),
    ARETURN(),
    RETURN(),
    GETSTATIC(OpArgs.CP2),
    PUTSTATIC(OpArgs.CP2),
    GETFIELD(OpArgs.CP2),
    PUTFIELD(OpArgs.CP2),
    INVOKEVIRTUAL(OpArgs.CP2),
    INVOKESPECIAL(OpArgs.CP2),
    INVOKESTATIC(OpArgs.CP2),
    INVOKEINTERFACE(OpArgs.CP2),
    INVOKEDYNAMIC(OpArgs.INVOKEDYNAMIC),
    NEW(OpArgs.CP2),
    NEWARRAY(OpArgs.NEWARRAY),
    ANEWARRAY(OpArgs.CP2),
    ARRAYLENGTH(),
    ATHROW(),
    CHECKCAST(OpArgs.CP2),
    INSTANCEOF(OpArgs.CP2),
    MONITORENTER(),
    MONITOREXIT(),
    WIDE(OpArgs.WIDE),
    MULTIANEWARRAY(OpArgs.MULTIANEWARRAY),
    IFNULL(OpArgs.OFF2),
    IFNONNULL(OpArgs.OFF2),
    GOTO_W(OpArgs.OFF4),
    JSR_W(OpArgs.OFF4),
    BREAKPOINT();

    public final OpArgs args;

    OpCode() {
        this.args = OpArgs.NONE;
    }

    OpCode(OpArgs args) {
        this.args = args;
    }

    private static final OpCode[] valueList = values();

    public static OpCode forByte(byte code) {
        return valueList[code & 0xff];
    }

    public byte getCode() {
        return (byte)ordinal();
    }

    public void writeTo(ClassWriter w) {
        w.writeU1(ordinal());
    }

}
